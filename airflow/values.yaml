airflow:
  ########################################
  ## CONFIG | Airflow Configs
  ########################################
  airflow:
    ## if we use legacy 1.10 airflow commands
    legacyCommands: false

    ## configs for the airflow container image
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-version.md
    image:
      repository: apache/airflow
      tag: 2.7.3-python3.9
      pullPolicy: IfNotPresent

    ## the airflow executor type to use
    executor: KubernetesExecutor

    ## the fernet encryption key (sets `AIRFLOW__CORE__FERNET_KEY`)
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/set-fernet-key.md
    ## [WARNING] change from default value to ensure security
    fernetKey: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="

    ## the secret_key for flask (sets `AIRFLOW__WEBSERVER__SECRET_KEY`)
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/set-webserver-secret-key.md
    ## [WARNING] change from default value to ensure security
    webserverSecretKey: "THIS IS UNSAFE!"

    ## environment variables for airflow configs
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-configs.md
    config:
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "False"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__LOGGING__REMOTE_LOGGING: "True"
      AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: "s3://ala-pipelines-dev/airflow/logs"
      AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID: "aws_default"      

    ## a list of users to create
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/airflow-users.md
    users:
      - username: admin
        password: admin
        role: Admin
        email: support@ala.org.au
        firstName: admin
        lastName: admin

    ## a list airflow connections to create
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-connections.md
    connections:
      - id: aws_default
        type: aws
        login: "NONSENSE"
        password: "NONSENSE"
        extra: |
          {
            "region_name": "ap-southeast-2"
          }
      - id: emr_default
        type: emr
        login: "NONSENSE"
        password: "NONSENSE"
        extra: |
          {
            "Name": "default_job_flow_name",
            "LogUri": "s3://ala-pipelines-dev/airflow/logs",
            "ReleaseLabel": "emr-5.34.0",
            "Instances": {
              "Ec2KeyName": "SET_IN_DAG",
              "Ec2SubnetId": "SET_IN_DAG",
              "InstanceGroups": [
                {
                  "Name": "Master nodes",
                  "Market": "ON_DEMAND",
                  "InstanceRole": "MASTER",
                  "InstanceType": "SET_IN_DAG",
                  "InstanceCount": 1
                },
                {
                  "Name": "Core nodes",
                  "Market": "ON_DEMAND",
                  "InstanceRole": "CORE",
                  "InstanceType": "SET_IN_DAG",
                  "InstanceCount": 1
                }
              ],
              "TerminationProtected": false,
              "KeepJobFlowAliveWhenNoSteps": false
            },
            "Applications": [
              {
                "Name": "Spark"
              }
            ],
            "VisibleToAllUsers": true,
            "JobFlowRole": "EMR_EC2_DefaultRole",
            "ServiceRole": "EMR_DefaultRole",
            "Tags": [
              {
                "Key": "app",
                "Value": "analytics"
              },
              {
                "Key": "environment",
                "Value": "development"
              }
            ]
          }

    ## a list airflow variables to create
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-variables.md
    variables: []

    ## a list airflow pools to create
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-pools.md
    pools: []

    ## extra pip packages to install in airflow Pods
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/extra-python-packages.md
    ## [WARNING] this feature is not recommended for production use, see docs
    extraPipPackages: [
      "apache-airflow-providers-amazon",
      "awscli",
      "apache-airflow-providers-common-sql",
      "boto3",
      "botocore",
      "asgiref",
      "watchtower",
      "jsonpath_ng",
      "redshift_connector",
      "sqlalchemy_redshift",
      "asgiref",
      "requests===2.31.0",
      "python-dateutil==2.8.2",
      "oauth2client==4.1.3",
      "requests_oauth2client==1.3.0"
    ]

    ## extra environment variables for the airflow Pods
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-environment-variables.md
    extraEnv:
      - name: "PYTHONPATH"
        value: "/opt/python/site-packages:/opt/airflow/dags/repo/dags"
      - name: "AIRFLOW__API__AUTH_BACKENDS"
        value: 'airflow.api.auth.backend.basic_auth'
      - name: "SQLALCHEMY_SILENCE_UBER_WARNING"
        value: "1"  

    ## extra VolumeMounts for the airflow Pods
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
    extraVolumeMounts: []

    ## extra Volumes for the airflow Pods
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
    extraVolumes: []

    ## configs generating the `pod_template.yaml` file for `AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE`
    ## [NOTE] the `dags.gitSync` values will create a git-sync init-container in the pod
    ## [NOTE] the `airflow.extraPipPackages` will NOT be installed
    kubernetesPodTemplate:

      ## the full content of the pod-template file (as a string)
      ## [NOTE] all other `kubernetesPodTemplate.*` are disabled when this is set
      stringOverride: ""

      ## resource requests/limits for the Pod template "base" container
      ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
      resources:
        limits:
          cpu: 2250m
          memory: 8Gi
        requests:
          cpu: 1250m
          memory: 4Gi

      ## extra pip packages to install in the Pod template
      ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/extra-python-packages.md
      ## [WARNING] this feature is not recommended for production use, see docs
      extraPipPackages: []

      ## extra VolumeMounts for the Pod template
      ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
      ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
      extraVolumeMounts: []

      ## extra Volumes for the Pod template
      ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
      ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
      extraVolumes: []

  ###################################
  ## COMPONENT | Airflow Scheduler
  ###################################
  scheduler:
    ## the number of scheduler Pods to run
    replicas: 1

    ## resource requests/limits for the scheduler Pods
    ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
    resources:
      limits:
        cpu: 1250m
        memory: 4Gi
      requests:
        cpu: 250m
        memory: 2Gi

    ## configs for the log-cleanup sidecar of the scheduler
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/monitoring/log-cleanup.md
    # logCleanup:
    #   enabled: true
    #   retentionMinutes: 21600

  ###################################
  ## COMPONENT | Airflow Webserver
  ###################################
  web:

    ## the number of web Pods to run
    replicas: 2

    ## resource requests/limits for the web Pods
    ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
    resources:
      limits:
        cpu: 1500m
        memory: 16Gi
      requests:
        cpu: 750m
        memory: 8Gi

    ## configs for the Service of the web Pods
    service:
      type: ClusterIP
      externalPort: 8080

    livenessProbe:
      enabled: false    

    ## configs generating the `webserver_config.py` file
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-configs.md#webserver_configpy
    webserverConfig:
      ## the full content of the `webserver_config.py` file (as a string)
      stringOverride: |
        from airflow import configuration as conf
        from flask_appbuilder.security.manager import AUTH_DB
        
        # the SQLAlchemy connection string
        SQLALCHEMY_DATABASE_URI = conf.get("core", "SQL_ALCHEMY_CONN")
        
        # use embedded DB for auth
        AUTH_TYPE = AUTH_DB

      ## the name of a Secret containing a `webserver_config.py` key
      existingSecret: ""

  ###################################
  ## COMPONENT | Airflow Workers
  ###################################
  workers:

    ## if the airflow workers StatefulSet should be deployed
    ##
    enabled: false

    ## if the airflow workers StatefulSet should be deployed
    serviceAccount:
      ## if a Kubernetes ServiceAccount is created
      create: false

      ## the name of the ServiceAccount
      name: "airflow"

      ## annotations for the ServiceAccount
      annotations: {}


  ###################################
  ## COMPONENT | Triggerer
  ###################################
  triggerer:
    ## if the airflow triggerer should be deployed
    enabled: true

    ## the number of triggerer Pods to run
    replicas: 1

    ## resource requests/limits for the triggerer Pods
    ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
    resources:
      limits:
        cpu: 2250m
        memory: 8Gi
      requests:
        cpu: 1250m
        memory: 4Gi

  ###################################
  ## COMPONENT | Flower
  ###################################
  flower:
    ## if the airflow flower UI should be deployed
    enabled: false

  ###################################
  ## CONFIG | Airflow Logs
  ###################################
  logs:
    ## the airflow logs folder
    # path: /opt/airflow/logs

    ## configs for the logs PVC
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/monitoring/log-persistence.md
    persistence:
      enabled: false

  ###################################
  ## CONFIG | Airflow DAGs
  ###################################
  dags:
    ## the airflow dags folder
    # path: /opt/airflow/dags

    ## configs for the dags PVC
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/load-dag-definitions.md
    persistence:
      enabled: false

    ## configs for the git-sync sidecar
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/load-dag-definitions.md
    gitSync:
      enabled: true
      # git repo clone url
      # ssh example: git@github.com:apache/airflow.git
      # https example: https://github.com/apache/airflow.git
      repo: https://github.com/atlasoflivingaustralia/pipelines-airflow.git
      branch: feature/airflow_2_6
      rev: HEAD
      # subpath within the repo where dags are located
      # should be "" if dags are at repo root
      subPath: "dags/"
      containerName: git-sync
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi

  ###################################
  ## CONFIG | Kubernetes Ingress
  ###################################
  ingress:
    ## if we should deploy Ingress resources
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/ingress.md
    enabled: false

  ###################################
  ## CONFIG | Kubernetes ServiceAccount
  ###################################
  serviceAccount:
    ## if a Kubernetes ServiceAccount is created
    create: true

    ## the name of the ServiceAccount
    name: "airflow"

    ## annotations for the ServiceAccount
    annotations: {}    
    #annot#ations: 
        #eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/YourIAMRoleName    

  ###################################
  ## CONFIG | Kubernetes Extra Manifests
  ###################################

  ## a list of extra Kubernetes manifests that will be deployed alongside the chart
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/extra-manifests.md
  extraManifests: []

  ###################################
  ## DATABASE | PgBouncer
  ###################################
  pgbouncer:
    ## if the pgbouncer Deployment is created
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/pgbouncer.md
    enabled: true

    ## resource requests/limits for the pgbouncer Pods
    ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
    resources:
      limits:
        cpu: 2250m
        memory: 8Gi
      requests:
        cpu: 1250m
        memory: 4Gi

    ## sets pgbouncer config: `auth_type`
    # authType: md5

  ###################################
  ## DATABASE | Embedded Postgres
  ###################################
  postgresql:
    ## if the `stable/postgresql` chart is used
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/embedded-database.md
    ## [WARNING] the embedded Postgres is NOT SUITABLE for production deployments of Airflow
    ## [WARNING] consider using an external database with `externalDatabase.*`
    enabled: true

    # 1000 = EFS access point user
    volumePermissions:
      enabled: true

    ## configs for the PVC of postgresql
    persistence:
      enabled: true
      storageClass: efs-sc
      accessMode: ReadWriteMany
      size: 100Gi
      mountPath: /bitnami/postgresql
      subPath: airflow/postgresql
      existingClaim: "data-airflow-postgresql-0"

  ###################################
  ## DATABASE | External Database
  ###################################
  externalDatabase:
    ## the type of external database
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/external-database.md
    type: postgres

  ###################################
  ## DATABASE | Embedded Redis
  ###################################
  redis:
    ## if the `stable/redis` chart is used
    enabled: false

  ###################################
  ## DATABASE | External Redis
  ###################################
  externalRedis:
    ## the host of the external redis
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/external-redis.md
    host: localhost
